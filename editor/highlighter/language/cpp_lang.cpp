#include <QMultiHash>
#include <QLatin1String>
#include <languagedata.h>

/**********************************************************/
/* C/C++ Data *********************************************/
/**********************************************************/

static bool cppDataInitialized = false;
static LanguageData cpp_keywords;
static LanguageData cpp_types;
static LanguageData cpp_builtin;
static LanguageData cpp_literals;
static LanguageData cpp_other;
void initCppData() {
    cpp_keywords = LanguageData{
    {('a'), QLatin1String("alignas")},
    {('a'), QLatin1String("alignof")},
    {('a'), QLatin1String("and")},
    {('a'), QLatin1String("and_eq")},
    {('a'), QLatin1String("asm")},
    {('b'), QLatin1String("bit_and")},
    {('b'), QLatin1String("bit_or")},
    {('b'), QLatin1String("break")},
    {('c'), QLatin1String("case")},
    {('c'), QLatin1String("catch")},
    {('c'), QLatin1String("compl")},
    {('c'), QLatin1String("concept")},
    {('c'), QLatin1String("const")},
    {('c'), QLatin1String("constinit")},
    {('c'), QLatin1String("constexpr")},
    {('c'), QLatin1String("consteval")},
    {('c'), QLatin1String("const_cast")},
    {('c'), QLatin1String("continue")},
    {('c'), QLatin1String("co_await")},
    {('c'), QLatin1String("co_return")},
    {('c'), QLatin1String("co_yield")},
    {('d'), QLatin1String("decltype")},
    {('d'), QLatin1String("default")},
    {('d'), QLatin1String("delete")},
    {('d'), QLatin1String("do")},
    {('d'), QLatin1String("dynamic_cast")},
    {('e'), QLatin1String("else")},
    {('e'), QLatin1String("explicit")},
    {('e'), QLatin1String("export")},
    {('e'), QLatin1String("extern")},
    {('f'), QLatin1String("for")},
    {('f'), QLatin1String("friend")},
    {('g'), QLatin1String("goto")},
    {('i'), QLatin1String("if")},
    {('i'), QLatin1String("inline")},
    {('m'), QLatin1String("mutable")},
    {('n'), QLatin1String("new")},
    {('n'), QLatin1String("not")},
    {('n'), QLatin1String("not_eq")},
    {('n'), QLatin1String("noexcept")},
    {('o'), QLatin1String("or")},
    {('o'), QLatin1String("or_eq")},
    {('o'), QLatin1String("operator")},
    {('p'), QLatin1String("private")},
    {('p'), QLatin1String("protected")},
    {('p'), QLatin1String("public")},
    {('r'), QLatin1String("register")},
    {('r'), QLatin1String("reinterpret_cast")},
    {('r'), QLatin1String("requires")},
    {('r'), QLatin1String("return")},
    {('s'), QLatin1String("signal")},
    {('s'), QLatin1String("sizeof")},
    {('s'), QLatin1String("slot")},
    {('s'), QLatin1String("static")},
    {('s'), QLatin1String("static_assert")},
    {('s'), QLatin1String("static_cast")},
    {('s'), QLatin1String("switch")},
    {('t'), QLatin1String("template")},
    {('t'), QLatin1String("this")},
    {('t'), QLatin1String("thread_local")},
    {('t'), QLatin1String("throw")},
    {('t'), QLatin1String("try")},
    {('t'), QLatin1String("typeid")},
    {('t'), QLatin1String("typedef")},
    {('t'), QLatin1String("typename")},
    {('u'), QLatin1String("using")},
    {('v'), QLatin1String("volatile")},
    {('w'), QLatin1String("while")},
    {('x'), QLatin1String("xor")},
    {('x'), QLatin1String("xor_eq")}};

    cpp_types = {
        {('a'), QLatin1String("auto")},
        {('b'), QLatin1String("bool")},
        {('c'), QLatin1String("char")},
        {('c'), QLatin1String("char8_t")},
        {('c'), QLatin1String("char16_t")},
        {('c'), QLatin1String("char32_t")},
        {('c'), QLatin1String("class")},
        {('d'), QLatin1String("double")},
        {('e'), QLatin1String("enum")},
        {('f'), QLatin1String("float")},
        {('i'), QLatin1String("int")},
        {('i'), QLatin1String("int8_t")},
        {('i'), QLatin1String("int16_t")},
        {('i'), QLatin1String("int32_t")},
        {('i'), QLatin1String("int64_t")},
        {('i'), QLatin1String("int_fast8_t")},
        {('i'), QLatin1String("int_fast16_t")},
        {('i'), QLatin1String("int_fast32_t")},
        {('i'), QLatin1String("int_fast64_t")},
        {('i'), QLatin1String("intmax_t")},
        {('i'), QLatin1String("intptr_t")},
        {('l'), QLatin1String("long")},
        {('n'), QLatin1String("namespace")},
        {('Q'), QLatin1String("QHash")},
        {('Q'), QLatin1String("QList")},
        {('Q'), QLatin1String("QMap")},
        {('Q'), QLatin1String("QString")},
        {('Q'), QLatin1String("QVector")},
        {('s'), QLatin1String("short")},
        {('s'), QLatin1String("size_t")},
        {('s'), QLatin1String("signed")},
        {('s'), QLatin1String("struct")},
        {('s'), QLatin1String("ssize_t")},
        {('u'), QLatin1String("uint8_t")},
        {('u'), QLatin1String("uint16_t")},
        {('u'), QLatin1String("uint32_t")},
        {('u'), QLatin1String("uint64_t")},
        {('u'), QLatin1String("uint_fast8_t")},
        {('u'), QLatin1String("uint_fast16_t")},
        {('u'), QLatin1String("uint_fast32_t")},
        {('u'), QLatin1String("uint_fast64_t")},
        {('u'), QLatin1String("uint_least8_t")},
        {('u'), QLatin1String("uint_least16_t")},
        {('u'), QLatin1String("uint_least32_t")},
        {('u'), QLatin1String("uint_least64_t")},
        {('u'), QLatin1String("uintmax_t")},
        {('u'), QLatin1String("uintptr_t")},
        {('u'), QLatin1String("unsigned")},
        {('u'), QLatin1String("union")},
        {('v'), QLatin1String("void")},
        {('w'), QLatin1String("wchar_t")}};

    cpp_literals = {
        {('f'), QLatin1String("false")},
        {('n'), QLatin1String("nullptr")},
        {('N'), QLatin1String("NULL")},
        {('t'), QLatin1String("true")}
    };

    cpp_builtin = {
        {('s'), QLatin1String("std")},
        {('s'), QLatin1String("string")},
        {('w'), QLatin1String("wstring")},
        {('c'), QLatin1String("cin")},
        {('c'), QLatin1String("cout")},
        {('c'), QLatin1String("cerr")},
        {('c'), QLatin1String("clog")},
        {('s'), QLatin1String("stdin")},
        {('s'), QLatin1String("stdout")},
        {('s'), QLatin1String("stderr")},
        {('s'), QLatin1String("stringstream")},
        {('i'), QLatin1String("istringstream")},
        {('o'), QLatin1String("ostringstream")},
        {('a'), QLatin1String("auto_ptr")},
        {('d'), QLatin1String("deque")},
        {('l'), QLatin1String("list")},
        {('q'), QLatin1String("queue")},
        {('s'), QLatin1String("stack")},
        {('v'), QLatin1String("vector")},
        {('m'), QLatin1String("map")},
        {('s'), QLatin1String("set")},
        {('b'), QLatin1String("bitset")},
        {('m'), QLatin1String("multiset")},
        {('m'), QLatin1String("multimap")},
        {('u'), QLatin1String("unordered_set")},
        {('u'), QLatin1String("unordered_map")},
        {('u'), QLatin1String("unordered_multiset")},
        {('u'), QLatin1String("unordered_multimap")},
        {('a'), QLatin1String("array")},
        {('s'), QLatin1String("shared_ptr")},
        {('a'), QLatin1String("abort")},
        {('t'), QLatin1String("terminate")},
        {('a'), QLatin1String("abs")},
        {('a'), QLatin1String("acos")},
        {('a'), QLatin1String("asin")},
        {('a'), QLatin1String("atan2")},
        {('a'), QLatin1String("atan")},
        {('c'), QLatin1String("calloc")},
        {('c'), QLatin1String("ceil")},
        {('c'), QLatin1String("cosh")},
        {('c'), QLatin1String("cos")},
        {('e'), QLatin1String("exit")},
        {('e'), QLatin1String("exp")},
        {('f'), QLatin1String("fabs")},
        {('f'), QLatin1String("floor")},
        {('f'), QLatin1String("fmod")},
        {('f'), QLatin1String("fprintf")},
        {('f'), QLatin1String("fputs")},
        {('f'), QLatin1String("free")},
        {('f'), QLatin1String("frexp")},
        {('f'), QLatin1String("fscanf")},
        {('f'), QLatin1String("future")},
        {('i'), QLatin1String("isalnum")},
        {('i'), QLatin1String("isalpha")},
        {('i'), QLatin1String("iscntrl")},
        {('i'), QLatin1String("isdigit")},
        {('i'), QLatin1String("isgraph")},
        {('i'), QLatin1String("islower")},
        {('i'), QLatin1String("isprint")},
        {('i'), QLatin1String("ispunct")},
        {('i'), QLatin1String("isspace")},
        {('i'), QLatin1String("isupper")},
        {('i'), QLatin1String("isxdigit")},
        {('t'), QLatin1String("tolower")},
        {('t'), QLatin1String("toupper")},
        {('l'), QLatin1String("labs")},
        {('l'), QLatin1String("ldexp")},
        {('l'), QLatin1String("log10")},
        {('l'), QLatin1String("log")},
        {('m'), QLatin1String("malloc")},
        {('r'), QLatin1String("realloc")},
        {('m'), QLatin1String("main")},
        {('m'), QLatin1String("memchr")},
        {('m'), QLatin1String("memcmp")},
        {('m'), QLatin1String("memcpy")},
        {('m'), QLatin1String("memset")},
        {('m'), QLatin1String("modf")},
        {('p'), QLatin1String("pow")},
        {('p'), QLatin1String("printf")},
        {('p'), QLatin1String("putchar")},
        {('p'), QLatin1String("puts")},
        {('s'), QLatin1String("scanf")},
        {('s'), QLatin1String("sinh")},
        {('s'), QLatin1String("sin")},
        {('s'), QLatin1String("snprintf")},
        {('s'), QLatin1String("sprintf")},
        {('s'), QLatin1String("sqrt")},
        {('s'), QLatin1String("sscanf")},
        {('s'), QLatin1String("strcat")},
        {('s'), QLatin1String("strchr")},
        {('s'), QLatin1String("strcmp")},
        {('s'), QLatin1String("strcpy")},
        {('s'), QLatin1String("strcspn")},
        {('s'), QLatin1String("strlen")},
        {('s'), QLatin1String("strncat")},
        {('s'), QLatin1String("strncmp")},
        {('s'), QLatin1String("strncpy")},
        {('s'), QLatin1String("strpbrk")},
        {('s'), QLatin1String("strrchr")},
        {('s'), QLatin1String("strspn")},
        {('s'), QLatin1String("strstr")},
        {('t'), QLatin1String("tanh")},
        {('t'), QLatin1String("tan")},
        {('v'), QLatin1String("vfprintf")},
        {('v'), QLatin1String("vprintf")},
        {('v'), QLatin1String("vsprintf")},
        {('e'), QLatin1String("endl")},
        {('i'), QLatin1String("initializer_list")},
        {('u'), QLatin1String("unique_ptr")},
        {('c'), QLatin1String("complex")},
        {('i'), QLatin1String("imaginary")}
    };

    cpp_other = {
        {('d'), QLatin1String("define")},
        {('e'), QLatin1String("else")},
        {('e'), QLatin1String("elif")},
        {('e'), QLatin1String("endif")},
        {('e'), QLatin1String("error")},
        {('i'), QLatin1String("if")},
        {('i'), QLatin1String("ifdef")},
        {('i'), QLatin1String("ifndef")},
        {('i'), QLatin1String("include")},
        {('l'), QLatin1String("line")},
        {('p'), QLatin1String("pragma")},
        {('P'), QLatin1String("_Pragma")},
        {('u'), QLatin1String("undef")},
        {('w'), QLatin1String("warning")}
    };
}
void loadCppData(LanguageData &typess,
             LanguageData &keywordss,
             LanguageData &builtins,
             LanguageData &literalss,
             LanguageData &others){
    if (!cppDataInitialized) {
        initCppData();
        cppDataInitialized = true;
    }

    typess = cpp_types;
    keywordss = cpp_keywords;
    builtins = cpp_builtin;
    literalss = cpp_literals;
    others = cpp_other;

}
