#include <QMultiHash>
#include <QLatin1String>
#include <languagedata.h>

/********************************************************/
/***   VEX DATA   ***************************************/
/********************************************************/
static bool vexDataInitialized = false;
static LanguageData vex_keywords;
static LanguageData vex_types;
static LanguageData vex_literals;
static LanguageData vex_builtin;
static LanguageData vex_other;
void initVEXData() {
    vex_keywords = {
        {'b', QLatin1String("break")},
        {'c', QLatin1String("continue")},
        {'d', QLatin1String("do")},
        {'e', QLatin1String("else")},
        {'f', QLatin1String("for")},
        {'f', QLatin1String("foreach")},
        {'f', QLatin1String("forpoints")},
        {'f', QLatin1String("function")},
        {'g', QLatin1String("gather")},
        {'i', QLatin1String("if")},
        {'i', QLatin1String("illuminance")},
        {'r', QLatin1String("return")},
        {'w', QLatin1String("while")}
    };
    vex_types = {
        {'b', QLatin1String("bsdf")},
        {'c', QLatin1String("char")},
        {'c', QLatin1String("color")},
        {'f', QLatin1String("float")},
        {'i', QLatin1String("int")},
        {'i', QLatin1String("integer")},
        {'m', QLatin1String("matrix")},
        {'m', QLatin1String("matrix2")},
        {'m', QLatin1String("matrix3")},
        {'m', QLatin1String("matrix4")},
        {'n', QLatin1String("normal")},
        {'p', QLatin1String("point")},
        {'s', QLatin1String("string")},
        {'s', QLatin1String("struct")},
        {'t', QLatin1String("typedef")},
        {'u', QLatin1String("union")},
        {'v', QLatin1String("vector")},
        {'v', QLatin1String("vector2")},
        {'v', QLatin1String("vector4")},
        {'v', QLatin1String("void")},
    };
    vex_literals = {
        {('f'), QLatin1String("false")},
        {('t'), QLatin1String("true")},
        {('n'), QLatin1String("null")},
    };

    vex_builtin = {
        {'D', QLatin1String("Du")},
        {'D', QLatin1String("Dv")},
        {'D', QLatin1String("Dw")},
        {'a', QLatin1String("abs")},
        {'a', QLatin1String("accessframe")},
        {'a', QLatin1String("acos")},
        {'a', QLatin1String("addattrib")},
        {'a', QLatin1String("addattribute")},
        {'a', QLatin1String("adddetailattrib")},
        {'a', QLatin1String("addgroup")},
        {'a', QLatin1String("addpoint")},
        {'a', QLatin1String("addpointattrib")},
        {'a', QLatin1String("addprim")},
        {'a', QLatin1String("addprimattrib")},
        {'a', QLatin1String("addvariablename")},
        {'a', QLatin1String("addvertex")},
        {'a', QLatin1String("addvertexattrib")},
        {'a', QLatin1String("addvisualizer")},
        {'a', QLatin1String("agentaddclip")},
        {'a', QLatin1String("agentclipcatalog")},
        {'a', QLatin1String("agentclipchannel")},
        {'a', QLatin1String("agentcliplength")},
        {'a', QLatin1String("agentclipnames")},
        {'a', QLatin1String("agentclipsample")},
        {'a', QLatin1String("agentclipsamplelocal")},
        {'a', QLatin1String("agentclipsamplerate")},
        {'a', QLatin1String("agentclipsampleworld")},
        {'a', QLatin1String("agentcliptimes")},
        {'a', QLatin1String("agentclipweights")},
        {'a', QLatin1String("agentcollisionlayer")},
        {'a', QLatin1String("agentcurrentlayer")},
        {'a', QLatin1String("agentlayerbindings")},
        {'a', QLatin1String("agentlayers")},
        {'a', QLatin1String("agentlayershapes")},
        {'a', QLatin1String("agentlocaltransform")},
        {'a', QLatin1String("agentlocaltransforms")},
        {'a', QLatin1String("agentrigchildren")},
        {'a', QLatin1String("agentrigfind")},
        {'a', QLatin1String("agentrigparent")},
        {'a', QLatin1String("agenttransformcount")},
        {'a', QLatin1String("agenttransformnames")},
        {'a', QLatin1String("agenttransformtolocal")},
        {'a', QLatin1String("agenttransformtoworld")},
        {'a', QLatin1String("agentworldtransform")},
        {'a', QLatin1String("agentworldtransforms")},
        {'a', QLatin1String("albedo")},
        {'a', QLatin1String("alphaname")},
        {'a', QLatin1String("ambient")},
        {'a', QLatin1String("anoise")},
        {'a', QLatin1String("append")},
        {'a', QLatin1String("area")},
        {'a', QLatin1String("argsort")},
        {'a', QLatin1String("array")},
        {'a', QLatin1String("ashikhmin")},
        {'a', QLatin1String("asin")},
        {'a', QLatin1String("assert_enabled")},
        {'a', QLatin1String("assign")},
        {'a', QLatin1String("atan")},
        {'a', QLatin1String("atan2")},
        {'a', QLatin1String("atof")},
        {'a', QLatin1String("atoi")},
        {'a', QLatin1String("atten")},
        {'a', QLatin1String("attrib")},
        {'a', QLatin1String("attribclass")},
        {'a', QLatin1String("attribsize")},
        {'a', QLatin1String("attribtype")},
        {'a', QLatin1String("attribtypeinfo")},
        {'a', QLatin1String("avg")},
        {'b', QLatin1String("binput")},
        {'b', QLatin1String("blackbody")},
        {'b', QLatin1String("blinn")},
        {'b', QLatin1String("blinnBRDF")},
        {'b', QLatin1String("bouncelabel")},
        {'b', QLatin1String("bouncemask")},
        {'b', QLatin1String("bumpmap")},
        {'b', QLatin1String("bumpmapA")},
        {'b', QLatin1String("bumpmapB")},
        {'b', QLatin1String("bumpmapG")},
        {'b', QLatin1String("bumpmapL")},
        {'b', QLatin1String("bumpmapR")},
        {'b', QLatin1String("bumpname")},
        {'c', QLatin1String("cbrt")},
        {'c', QLatin1String("ceil")},
        {'c', QLatin1String("ch")},
        {'c', QLatin1String("ch3")},
        {'c', QLatin1String("ch4")},
        {'c', QLatin1String("chend")},
        {'c', QLatin1String("chendf")},
        {'c', QLatin1String("chendt")},
        {'c', QLatin1String("chf")},
        {'c', QLatin1String("chi")},
        {'c', QLatin1String("chinput")},
        {'c', QLatin1String("chname")},
        {'c', QLatin1String("chnumchan")},
        {'c', QLatin1String("chp")},
        {'c', QLatin1String("chr")},
        {'c', QLatin1String("chramp")},
        {'c', QLatin1String("chrate")},
        {'c', QLatin1String("chs")},
        {'c', QLatin1String("chsraw")},
        {'c', QLatin1String("chstart")},
        {'c', QLatin1String("chstartf")},
        {'c', QLatin1String("chstartt")},
        {'c', QLatin1String("chv")},
        {'c', QLatin1String("cinput")},
        {'c', QLatin1String("ckspline")},
        {'c', QLatin1String("clamp")},
        {'c', QLatin1String("clip")},
        {'c', QLatin1String("colormap")},
        {'c', QLatin1String("colorname")},
        {'c', QLatin1String("computenormal")},
        {'c', QLatin1String("concat")},
        {'c', QLatin1String("cone")},
        {'c', QLatin1String("cos")},
        {'c', QLatin1String("cosh")},
        {'c', QLatin1String("cracktransform")},
        {'c', QLatin1String("cross")},
        {'c', QLatin1String("cspline")},
        {'c', QLatin1String("ctransform")},
        {'c', QLatin1String("curlnoise")},
        {'c', QLatin1String("curlnoise2d")},
        {'c', QLatin1String("curlxnoise")},
        {'c', QLatin1String("curlxnoise2d")},
        {'c', QLatin1String("cvex_bsdf")},
        {'d', QLatin1String("degrees")},
        {'d', QLatin1String("depthmap")},
        {'d', QLatin1String("depthname")},
        {'d', QLatin1String("detail")},
        {'d', QLatin1String("detailattrib")},
        {'d', QLatin1String("detailattribsize")},
        {'d', QLatin1String("detailattribtype")},
        {'d', QLatin1String("detailattribtypeinfo")},
        {'d', QLatin1String("detailintrinsic")},
        {'d', QLatin1String("determinant")},
        {'d', QLatin1String("diffuse")},
        {'d', QLatin1String("diffuseBRDF")},
        {'d', QLatin1String("dihedral")},
        {'d', QLatin1String("dimport")},
        {'d', QLatin1String("distance")},
        {'d', QLatin1String("distance2")},
        {'d', QLatin1String("dot")},
        {'d', QLatin1String("dsmpixel")},
        {'e', QLatin1String("eigenvalues")},
        {'e', QLatin1String("endswith")},
        {'e', QLatin1String("environment")},
        {'e', QLatin1String("erf")},
        {'e', QLatin1String("erf_inv")},
        {'e', QLatin1String("erfc")},
        {'e', QLatin1String("error")},
        {'e', QLatin1String("eulertoquaternion")},
        {'e', QLatin1String("eval_bsdf")},
        {'e', QLatin1String("exp")},
        {'e', QLatin1String("expand_udim")},
        {'e', QLatin1String("expandpointgroup")},
        {'e', QLatin1String("expandprimgroup")},
        {'f', QLatin1String("fastshadow")},
        {'f', QLatin1String("filamentsample")},
        {'f', QLatin1String("file_stat")},
        {'f', QLatin1String("filtershadow")},
        {'f', QLatin1String("filterstep")},
        {'f', QLatin1String("find")},
        {'f', QLatin1String("findattribval")},
        {'f', QLatin1String("findattribvalcount")},
        {'f', QLatin1String("finput")},
        {'f', QLatin1String("fit")},
        {'f', QLatin1String("fit01")},
        {'f', QLatin1String("fit10")},
        {'f', QLatin1String("fit11")},
        {'f', QLatin1String("floor")},
        {'f', QLatin1String("flownoise")},
        {'f', QLatin1String("flowpnoise")},
        {'f', QLatin1String("frac")},
        {'f', QLatin1String("fresnel")},
        {'f', QLatin1String("fromNDC")},
        {'f', QLatin1String("frontface")},
        {'f', QLatin1String("fuzzify")},
        {'f', QLatin1String("fuzzy_and")},
        {'f', QLatin1String("fuzzy_defuzz_centroid")},
        {'f', QLatin1String("fuzzy_nand")},
        {'f', QLatin1String("fuzzy_nor")},
        {'f', QLatin1String("fuzzy_not")},
        {'f', QLatin1String("fuzzy_nxor")},
        {'f', QLatin1String("fuzzy_or")},
        {'f', QLatin1String("fuzzy_xor")},
        {'g', QLatin1String("geoself")},
        {'g', QLatin1String("getattrib")},
        {'g', QLatin1String("getattribute")},
        {'g', QLatin1String("getbbox")},
        {'g', QLatin1String("getblurP")},
        {'g', QLatin1String("getbounces")},
        {'g', QLatin1String("getbounds")},
        {'g', QLatin1String("getcomp")},
        {'g', QLatin1String("getcomponents")},
        {'g', QLatin1String("getderiv")},
        {'g', QLatin1String("getfogname")},
        {'g', QLatin1String("getglobalraylevel")},
        {'g', QLatin1String("getlight")},
        {'g', QLatin1String("getlightid")},
        {'g', QLatin1String("getlightname")},
        {'g', QLatin1String("getlights")},
        {'g', QLatin1String("getlightscope")},
        {'g', QLatin1String("getmaterial")},
        {'g', QLatin1String("getobjectname")},
        {'g', QLatin1String("getphotonlight")},
        {'g', QLatin1String("getpointbbox")},
        {'g', QLatin1String("getprimid")},
        {'g', QLatin1String("getptextureid")},
        {'g', QLatin1String("getraylevel")},
        {'g', QLatin1String("getrayweight")},
        {'g', QLatin1String("getsamplestore")},
        {'g', QLatin1String("getscope")},
        {'g', QLatin1String("getsmoothP")},
        {'g', QLatin1String("getspace")},
        {'g', QLatin1String("getuvobjects")},
        {'g', QLatin1String("getuvtangents")},
        {'g', QLatin1String("gradient")},
        {'h', QLatin1String("hair")},
        {'h', QLatin1String("hasattrib")},
        {'h', QLatin1String("hasdetailattrib")},
        {'h', QLatin1String("haslight")},
        {'h', QLatin1String("hasplane")},
        {'h', QLatin1String("haspointattrib")},
        {'h', QLatin1String("hasprimattrib")},
        {'h', QLatin1String("hasvertexattrib")},
        {'h', QLatin1String("hedge_dstpoint")},
        {'h', QLatin1String("hedge_dstvertex")},
        {'h', QLatin1String("hedge_equivcount")},
        {'h', QLatin1String("hedge_isequiv")},
        {'h', QLatin1String("hedge_isprimary")},
        {'h', QLatin1String("hedge_isvalid")},
        {'h', QLatin1String("hedge_next")},
        {'h', QLatin1String("hedge_nextequiv")},
        {'h', QLatin1String("hedge_postdstpoint")},
        {'h', QLatin1String("hedge_postdstvertex")},
        {'h', QLatin1String("hedge_presrcpoint")},
        {'h', QLatin1String("hedge_presrcvertex")},
        {'h', QLatin1String("hedge_prev")},
        {'h', QLatin1String("hedge_prim")},
        {'h', QLatin1String("hedge_primary")},
        {'h', QLatin1String("hedge_srcpoint")},
        {'h', QLatin1String("hedge_srcvertex")},
        {'h', QLatin1String("henyeygreenstein")},
        {'h', QLatin1String("hscript_noise")},
        {'h', QLatin1String("hscript_rand")},
        {'h', QLatin1String("hscript_snoise")},
        {'h', QLatin1String("hscript_sturb")},
        {'h', QLatin1String("hscript_turb")},
        {'h', QLatin1String("hsvtorgb")},
        {'i', QLatin1String("iaspect")},
        {'i', QLatin1String("ichname")},
        {'i', QLatin1String("ident")},
        {'i', QLatin1String("idtopoint")},
        {'i', QLatin1String("idtoprim")},
        {'i', QLatin1String("iend")},
        {'i', QLatin1String("iendtime")},
        {'i', QLatin1String("ihasplane")},
        {'i', QLatin1String("import")},
        {'i', QLatin1String("ingroup")},
        {'i', QLatin1String("inpointgroup")},
        {'i', QLatin1String("inprimgroup")},
        {'i', QLatin1String("insert")},
        {'i', QLatin1String("instance")},
        {'i', QLatin1String("interpolate")},
        {'i', QLatin1String("intersect")},
        {'i', QLatin1String("intersect_all")},
        {'i', QLatin1String("intersect_lights")},
        {'i', QLatin1String("inumplanes")},
        {'i', QLatin1String("invert")},
        {'i', QLatin1String("invertexgroup")},
        {'i', QLatin1String("iplaneindex")},
        {'i', QLatin1String("iplanename")},
        {'i', QLatin1String("iplanesize")},
        {'i', QLatin1String("irate")},
        {'i', QLatin1String("irradiance")},
        {'i', QLatin1String("isalpha")},
        {'i', QLatin1String("isbound")},
        {'i', QLatin1String("isconnected")},
        {'i', QLatin1String("isdigit")},
        {'i', QLatin1String("isfinite")},
        {'i', QLatin1String("isfogray")},
        {'i', QLatin1String("isframes")},
        {'i', QLatin1String("isnan")},
        {'i', QLatin1String("isotropic")},
        {'i', QLatin1String("israytracing")},
        {'i', QLatin1String("issamples")},
        {'i', QLatin1String("isseconds")},
        {'i', QLatin1String("isshadowray")},
        {'i', QLatin1String("istart")},
        {'i', QLatin1String("istarttime")},
        {'i', QLatin1String("isuvrendering")},
        {'i', QLatin1String("isvalidindex")},
        {'i', QLatin1String("isvarying")},
        {'i', QLatin1String("itoa")},
        {'i', QLatin1String("ixres")},
        {'i', QLatin1String("iyres")},
        {'j', QLatin1String("join")},
        {'k', QLatin1String("kspline")},
        {'l', QLatin1String("len")},
        {'l', QLatin1String("length")},
        {'l', QLatin1String("length2")},
        {'l', QLatin1String("lerp")},
        {'l', QLatin1String("lightid")},
        {'l', QLatin1String("limit_sample_space")},
        {'l', QLatin1String("limport")},
        {'l', QLatin1String("lkspline")},
        {'l', QLatin1String("log")},
        {'l', QLatin1String("log10")},
        {'l', QLatin1String("lookat")},
        {'l', QLatin1String("lspline")},
        {'l', QLatin1String("lstrip")},
        {'l', QLatin1String("luminance")},
        {'l', QLatin1String("lumname")},
        {'m', QLatin1String("makebasis")},
        {'m', QLatin1String("maketransform")},
        {'m', QLatin1String("maskname")},
        {'m', QLatin1String("match")},
        {'m', QLatin1String("matchvex_blinn")},
        {'m', QLatin1String("matchvex_specular")},
        {'m', QLatin1String("mattrib")},
        {'m', QLatin1String("max")},
        {'m', QLatin1String("mdensity")},
        {'m', QLatin1String("metaimport")},
        {'m', QLatin1String("metamarch")},
        {'m', QLatin1String("metanext")},
        {'m', QLatin1String("metastart")},
        {'m', QLatin1String("metaweight")},
        {'m', QLatin1String("min")},
        {'m', QLatin1String("minpos")},
        {'m', QLatin1String("mspace")},
        {'n', QLatin1String("nametopoint")},
        {'n', QLatin1String("nametoprim")},
        {'n', QLatin1String("nbouncetypes")},
        {'n', QLatin1String("nearpoint")},
        {'n', QLatin1String("nearpoints")},
        {'n', QLatin1String("neighbour")},
        {'n', QLatin1String("neighbourcount")},
        {'n', QLatin1String("neighbours")},
        {'n', QLatin1String("newgroup")},
        {'n', QLatin1String("newsampler")},
        {'n', QLatin1String("nextsample")},
        {'n', QLatin1String("ninput")},
        {'n', QLatin1String("noise")},
        {'n', QLatin1String("noised")},
        {'n', QLatin1String("normal_bsdf")},
        {'n', QLatin1String("normalize")},
        {'n', QLatin1String("normalname")},
        {'n', QLatin1String("npoints")},
        {'n', QLatin1String("npointsgroup")},
        {'n', QLatin1String("nprimitives")},
        {'n', QLatin1String("nprimitivesgroup")},
        {'n', QLatin1String("nrandom")},
        {'n', QLatin1String("ntransform")},
        {'n', QLatin1String("nuniqueval")},
        {'n', QLatin1String("nvertices")},
        {'n', QLatin1String("nverticesgroup")},
        {'o', QLatin1String("occlusion")},
        {'o', QLatin1String("onoise")},
        {'o', QLatin1String("opdigits")},
        {'o', QLatin1String("opend")},
        {'o', QLatin1String("opfullpath")},
        {'o', QLatin1String("opstart")},
        {'o', QLatin1String("optransform")},
        {'o', QLatin1String("ord")},
        {'o', QLatin1String("osd_facecount")},
        {'o', QLatin1String("osd_firstpatch")},
        {'o', QLatin1String("osd_limitsurface")},
        {'o', QLatin1String("osd_limitsurfacevertex")},
        {'o', QLatin1String("osd_patchcount")},
        {'o', QLatin1String("osd_patches")},
        {'o', QLatin1String("outerproduct")},
        {'o', QLatin1String("ow_nspace")},
        {'o', QLatin1String("ow_space")},
        {'o', QLatin1String("ow_vspace")},
        {'p', QLatin1String("pack_inttosafefloat")},
        {'p', QLatin1String("pathtrace")},
        {'p', QLatin1String("pcclose")},
        {'p', QLatin1String("pcconvex")},
        {'p', QLatin1String("pcexport")},
        {'p', QLatin1String("pcfarthest")},
        {'p', QLatin1String("pcfilter")},
        {'p', QLatin1String("pcfind")},
        {'p', QLatin1String("pcfind_radius")},
        {'p', QLatin1String("pcgenerate")},
        {'p', QLatin1String("pcimport")},
        {'p', QLatin1String("pcimportbyidx3")},
        {'p', QLatin1String("pcimportbyidx4")},
        {'p', QLatin1String("pcimportbyidxf")},
        {'p', QLatin1String("pcimportbyidxi")},
        {'p', QLatin1String("pcimportbyidxp")},
        {'p', QLatin1String("pcimportbyidxs")},
        {'p', QLatin1String("pcimportbyidxv")},
        {'p', QLatin1String("pciterate")},
        {'p', QLatin1String("pcnumfound")},
        {'p', QLatin1String("pcopen")},
        {'p', QLatin1String("pcopenlod")},
        {'p', QLatin1String("pcsampleleaf")},
        {'p', QLatin1String("pcsize")},
        {'p', QLatin1String("pcunshaded")},
        {'p', QLatin1String("pcwrite")},
        {'p', QLatin1String("pgfind")},
        {'p', QLatin1String("phong")},
        {'p', QLatin1String("phongBRDF")},
        {'p', QLatin1String("phonglobe")},
        {'p', QLatin1String("photonmap")},
        {'p', QLatin1String("planeindex")},
        {'p', QLatin1String("planename")},
        {'p', QLatin1String("planesize")},
        {'p', QLatin1String("pluralize")},
        {'p', QLatin1String("pnoise")},
        {'p', QLatin1String("point")},
        {'p', QLatin1String("pointattrib")},
        {'p', QLatin1String("pointattribsize")},
        {'p', QLatin1String("pointattribtype")},
        {'p', QLatin1String("pointattribtypeinfo")},
        {'p', QLatin1String("pointedge")},
        {'p', QLatin1String("pointhedge")},
        {'p', QLatin1String("pointhedgenext")},
        {'p', QLatin1String("pointname")},
        {'p', QLatin1String("pointprims")},
        {'p', QLatin1String("pointvertex")},
        {'p', QLatin1String("pointvertices")},
        {'p', QLatin1String("polardecomp")},
        {'p', QLatin1String("pop")},
        {'p', QLatin1String("pow")},
        {'p', QLatin1String("prim")},
        {'p', QLatin1String("prim_attribute")},
        {'p', QLatin1String("prim_normal")},
        {'p', QLatin1String("primattrib")},
        {'p', QLatin1String("primattribsize")},
        {'p', QLatin1String("primattribtype")},
        {'p', QLatin1String("primattribtypeinfo")},
        {'p', QLatin1String("primhedge")},
        {'p', QLatin1String("primintrinsic")},
        {'p', QLatin1String("primpoint")},
        {'p', QLatin1String("primpoints")},
        {'p', QLatin1String("primuv")},
        {'p', QLatin1String("primvertex")},
        {'p', QLatin1String("primvertexcount")},
        {'p', QLatin1String("primvertices")},
        {'p', QLatin1String("print_once")},
        {'p', QLatin1String("printf")},
        {'p', QLatin1String("product")},
        {'p', QLatin1String("ptexture")},
        {'p', QLatin1String("ptlined")},
        {'p', QLatin1String("ptransform")},
        {'p', QLatin1String("push")},
        {'q', QLatin1String("qconvert")},
        {'q', QLatin1String("qdistance")},
        {'q', QLatin1String("qinvert")},
        {'q', QLatin1String("qmultiply")},
        {'q', QLatin1String("qrotate")},
        {'q', QLatin1String("quaternion")},
        {'r', QLatin1String("radians")},
        {'r', QLatin1String("rand")},
        {'r', QLatin1String("random")},
        {'r', QLatin1String("random_fhash")},
        {'r', QLatin1String("random_ihash")},
        {'r', QLatin1String("random_shash")},
        {'r', QLatin1String("random_sobol")},
        {'r', QLatin1String("rawbumpmap")},
        {'r', QLatin1String("rawbumpmapA")},
        {'r', QLatin1String("rawbumpmapB")},
        {'r', QLatin1String("rawbumpmapG")},
        {'r', QLatin1String("rawbumpmapL")},
        {'r', QLatin1String("rawbumpmapR")},
        {'r', QLatin1String("rawcolormap")},
        {'r', QLatin1String("rayhittest")},
        {'r', QLatin1String("rayimport")},
        {'r', QLatin1String("re_find")},
        {'r', QLatin1String("re_findall")},
        {'r', QLatin1String("re_match")},
        {'r', QLatin1String("re_replace")},
        {'r', QLatin1String("re_split")},
        {'r', QLatin1String("reflect")},
        {'r', QLatin1String("reflectlight")},
        {'r', QLatin1String("refract")},
        {'r', QLatin1String("refractlight")},
        {'r', QLatin1String("relativepath")},
        {'r', QLatin1String("relbbox")},
        {'r', QLatin1String("relpointbbox")},
        {'r', QLatin1String("removegroup")},
        {'r', QLatin1String("removeindex")},
        {'r', QLatin1String("removepoint")},
        {'r', QLatin1String("removeprim")},
        {'r', QLatin1String("removevalue")},
        {'r', QLatin1String("renderstate")},
        {'r', QLatin1String("reorder")},
        {'r', QLatin1String("resample_linear")},
        {'r', QLatin1String("resize")},
        {'r', QLatin1String("resolvemissedray")},
        {'r', QLatin1String("reverse")},
        {'r', QLatin1String("rgbtohsv")},
        {'r', QLatin1String("rgbtoxyz")},
        {'r', QLatin1String("rint")},
        {'r', QLatin1String("rotate")},
        {'r', QLatin1String("rotate_x_to")},
        {'r', QLatin1String("rstrip")},
        {'s', QLatin1String("sample_bsdf")},
        {'s', QLatin1String("sample_cauchy")},
        {'s', QLatin1String("sample_circle_arc")},
        {'s', QLatin1String("sample_circle_edge_uniform")},
        {'s', QLatin1String("sample_circle_slice")},
        {'s', QLatin1String("sample_circle_uniform")},
        {'s', QLatin1String("sample_direction_cone")},
        {'s', QLatin1String("sample_direction_uniform")},
        {'s', QLatin1String("sample_discrete")},
        {'s', QLatin1String("sample_exponential")},
        {'s', QLatin1String("sample_geometry")},
        {'s', QLatin1String("sample_hemisphere")},
        {'s', QLatin1String("sample_hypersphere_cone")},
        {'s', QLatin1String("sample_hypersphere_uniform")},
        {'s', QLatin1String("sample_light")},
        {'s', QLatin1String("sample_lognormal")},
        {'s', QLatin1String("sample_lognormal_by_median")},
        {'s', QLatin1String("sample_normal")},
        {'s', QLatin1String("sample_orientation_cone")},
        {'s', QLatin1String("sample_orientation_uniform")},
        {'s', QLatin1String("sample_photon")},
        {'s', QLatin1String("sample_sphere_cone")},
        {'s', QLatin1String("sample_sphere_uniform")},
        {'s', QLatin1String("sampledisk")},
        {'s', QLatin1String("scale")},
        {'s', QLatin1String("select")},
        {'s', QLatin1String("sensor_panorama_create")},
        {'s', QLatin1String("sensor_panorama_getcolor")},
        {'s', QLatin1String("sensor_panorama_getcone")},
        {'s', QLatin1String("sensor_panorama_getdepth")},
        {'s', QLatin1String("sensor_save")},
        {'s', QLatin1String("serialize")},
        {'s', QLatin1String("set")},
        {'s', QLatin1String("setagentclipnames")},
        {'s', QLatin1String("setagentcliptimes")},
        {'s', QLatin1String("setagentclipweights")},
        {'s', QLatin1String("setagentcollisionlayer")},
        {'s', QLatin1String("setagentcurrentlayer")},
        {'s', QLatin1String("setagentlocaltransform")},
        {'s', QLatin1String("setagentlocaltransforms")},
        {'s', QLatin1String("setagentworldtransform")},
        {'s', QLatin1String("setagentworldtransforms")},
        {'s', QLatin1String("setattrib")},
        {'s', QLatin1String("setattribtypeinfo")},
        {'s', QLatin1String("setcomp")},
        {'s', QLatin1String("setcurrentlight")},
        {'s', QLatin1String("setdetailattrib")},
        {'s', QLatin1String("setpointattrib")},
        {'s', QLatin1String("setpointgroup")},
        {'s', QLatin1String("setprimattrib")},
        {'s', QLatin1String("setprimgroup")},
        {'s', QLatin1String("setprimintrinsic")},
        {'s', QLatin1String("setprimvertex")},
        {'s', QLatin1String("setsamplestore")},
        {'s', QLatin1String("setvertexattrib")},
        {'s', QLatin1String("setvertexgroup")},
        {'s', QLatin1String("setvertexpoint")},
        {'s', QLatin1String("shadow")},
        {'s', QLatin1String("shadow_light")},
        {'s', QLatin1String("shadowmap")},
        {'s', QLatin1String("shimport")},
        {'s', QLatin1String("shl")},
        {'s', QLatin1String("shr")},
        {'s', QLatin1String("shrz")},
        {'s', QLatin1String("sign")},
        {'s', QLatin1String("simport")},
        {'s', QLatin1String("sin")},
        {'s', QLatin1String("sinh")},
        {'s', QLatin1String("sleep")},
        {'s', QLatin1String("slerp")},
        {'s', QLatin1String("slice")},
        {'s', QLatin1String("slideframe")},
        {'s', QLatin1String("smooth")},
        {'s', QLatin1String("smoothrotation")},
        {'s', QLatin1String("snoise")},
        {'s', QLatin1String("solvecubic")},
        {'s', QLatin1String("solvepoly")},
        {'s', QLatin1String("solvequadratic")},
        {'s', QLatin1String("sort")},
        {'s', QLatin1String("specular")},
        {'s', QLatin1String("specularBRDF")},
        {'s', QLatin1String("spline")},
        {'s', QLatin1String("split")},
        {'s', QLatin1String("splitpath")},
        {'s', QLatin1String("sprintf")},
        {'s', QLatin1String("sqrt")},
        {'s', QLatin1String("startswith")},
        {'s', QLatin1String("storelightexport")},
        {'s', QLatin1String("strip")},
        {'s', QLatin1String("strlen")},
        {'s', QLatin1String("sum")},
        {'s', QLatin1String("switch")},
        {'s', QLatin1String("swizzle")},
        {'t', QLatin1String("tan")},
        {'t', QLatin1String("tanh")},
        {'t', QLatin1String("tet_adjacent")},
        {'t', QLatin1String("tet_faceindex")},
        {'t', QLatin1String("teximport")},
        {'t', QLatin1String("texprintf")},
        {'t', QLatin1String("texture")},
        {'t', QLatin1String("texture3d")},
        {'t', QLatin1String("texture3dBox")},
        {'t', QLatin1String("titlecase")},
        {'t', QLatin1String("toNDC")},
        {'t', QLatin1String("tolower")},
        {'t', QLatin1String("toupper")},
        {'t', QLatin1String("trace")},
        {'t', QLatin1String("translate")},
        {'t', QLatin1String("translucent")},
        {'t', QLatin1String("transpose")},
        {'t', QLatin1String("trunc")},
        {'t', QLatin1String("tw_nspace")},
        {'t', QLatin1String("tw_space")},
        {'t', QLatin1String("tw_vspace")},
        {'u', QLatin1String("uniqueval")},
        {'u', QLatin1String("unpack_intfromsafefloat")},
        {'u', QLatin1String("unserialize")},
        {'u', QLatin1String("upush")},
        {'u', QLatin1String("uvunwrap")},
        {'v', QLatin1String("variance")},
        {'v', QLatin1String("velocityname")},
        {'v', QLatin1String("vertex")},
        {'v', QLatin1String("vertexattrib")},
        {'v', QLatin1String("vertexattribsize")},
        {'v', QLatin1String("vertexattribtype")},
        {'v', QLatin1String("vertexattribtypeinfo")},
        {'v', QLatin1String("vertexhedge")},
        {'v', QLatin1String("vertexindex")},
        {'v', QLatin1String("vertexnext")},
        {'v', QLatin1String("vertexpoint")},
        {'v', QLatin1String("vertexprev")},
        {'v', QLatin1String("vertexprim")},
        {'v', QLatin1String("vertexprimindex")},
        {'v', QLatin1String("vnoise")},
        {'v', QLatin1String("volume")},
        {'v', QLatin1String("volumegradient")},
        {'v', QLatin1String("volumeindex")},
        {'v', QLatin1String("volumeindexorigin")},
        {'v', QLatin1String("volumeindextopos")},
        {'v', QLatin1String("volumeindexv")},
        {'v', QLatin1String("volumepostoindex")},
        {'v', QLatin1String("volumeres")},
        {'v', QLatin1String("volumesample")},
        {'v', QLatin1String("volumesamplev")},
        {'v', QLatin1String("vtransform")},
        {'w', QLatin1String("warning")},
        {'w', QLatin1String("wireblinn")},
        {'w', QLatin1String("wirediffuse")},
        {'w', QLatin1String("wnoise")},
        {'w', QLatin1String("wo_nspace")},
        {'w', QLatin1String("wo_space")},
        {'w', QLatin1String("wo_vspace")},
        {'w', QLatin1String("writepixel")},
        {'w', QLatin1String("wt_nspace")},
        {'w', QLatin1String("wt_space")},
        {'w', QLatin1String("wt_vspace")},
        {'x', QLatin1String("xnoise")},
        {'x', QLatin1String("xnoised")},
        {'x', QLatin1String("xyzdist")},
        {'x', QLatin1String("xyztorgb")}
    };
    vex_other = {
        {('d'), QLatin1String("define")},
        {('e'), QLatin1String("else")},
        {('e'), QLatin1String("endif")},
        {('i'), QLatin1String("if")},
        {('i'), QLatin1String("ifdef")},
        {('i'), QLatin1String("ifndef")},
        {('i'), QLatin1String("include")},
        {('p'), QLatin1String("pragma")},
        {('u'), QLatin1String("undef")},
    };
}
void loadVEXData(LanguageData &types,
             LanguageData &keywords,
             LanguageData &builtin,
             LanguageData &literals,
             LanguageData &other) {
    if (!vexDataInitialized) {
        initVEXData();
        vexDataInitialized = true;
    }
    types = vex_types;
    keywords = vex_keywords;
    builtin = vex_builtin;
    literals = vex_literals;
    other = vex_other;
}
